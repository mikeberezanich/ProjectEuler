//Project Euler Problem 2
//Prompt: Each new term in the Fibonacci sequence is generated by adding the previous 
//        two terms. By starting with 1 and 2, the first 10 terms will be:
//
//        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
//        By considering the terms in the Fibonacci sequence whose values do not exceed
//        four million, find the sum of the even-valued terms.

#include <iostream>

int main() {

	int currNumber = 2;   //current number in the fibonacci sequence (starting at 2)
	int prevNumber = 1;   //previous number in the fibonacci sequence (starting at 1)
	int tempNumber = 0;   //temporary holder for advancing in the sequence
	int evenSum = 2;      //sum of the even numbers (starts at 2 because this is the first even number)

	while (currNumber <= 4000000) {

		tempNumber = currNumber;
		currNumber += prevNumber;
		prevNumber = tempNumber;

		if (currNumber % 2 == 0)
			evenSum += currNumber;

	}

	std::cout << "Sum of even numbers: " << evenSum << std::endl;

	return 0;

}